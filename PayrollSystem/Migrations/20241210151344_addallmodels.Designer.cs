// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayrollSystem.Data.Common;

#nullable disable

namespace PayrollSystem.Migrations
{
    [DbContext(typeof(DbsContext))]
    [Migration("20241210151344_addallmodels")]
    partial class addallmodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.DailyTimeSheet", b =>
                {
                    b.Property<long>("TimeSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TimeSheetId"), 1L, 1);

                    b.Property<string>("AttendanceFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LogOutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoutLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TodayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalHoursWorked")
                        .HasColumnType("int");

                    b.HasKey("TimeSheetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DailyTimeSheet");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Department", b =>
                {
                    b.Property<long>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartementName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeId"), 1L, 1);

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganisationEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("OrgnisationID")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OrganisationEmail")
                        .IsUnique();

                    b.HasIndex("OrgnisationID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.EmployeeSecurity", b =>
                {
                    b.Property<long>("UserSecurityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserSecurityId"), 1L, 1);

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("UserPassword")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UserSecurityId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSecurity");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Orgnisations", b =>
                {
                    b.Property<long>("OrgnisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrgnisationID"), 1L, 1);

                    b.Property<string>("CeoEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeoMobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorMobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrgnisationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationCeo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationDirectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationEndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationGstNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationPincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrgnisationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgnisationStartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnisationState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgnizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemRegisteredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrgnisationID");

                    b.ToTable("Orgnisations");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.PaymentData", b =>
                {
                    b.Property<long>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentID"), 1L, 1);

                    b.Property<double>("CTC")
                        .HasColumnType("float");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<double>("GrossPay")
                        .HasColumnType("float");

                    b.Property<double>("NetPay")
                        .HasColumnType("float");

                    b.HasKey("PaymentID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.UserLeave", b =>
                {
                    b.Property<long>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LeaveId"), 1L, 1);

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppliedReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("NoofDays")
                        .HasColumnType("float");

                    b.Property<string>("RejectedReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("UserLeaves");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Logging.ExceptionLog", b =>
                {
                    b.Property<long>("ExceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ExceptionId"), 1L, 1);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExceptionMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ExceptionId");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Logging.UserLogs", b =>
                {
                    b.Property<long>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogID"), 1L, 1);

                    b.Property<string>("BrowswerUsed")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IdAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LogID");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.DailyTimeSheet", b =>
                {
                    b.HasOne("PayrollSystem.Entity.Models.Employee.Employee", "employee")
                        .WithMany("dailyTimeSheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Employee", b =>
                {
                    b.HasOne("PayrollSystem.Entity.Models.Employee.Department", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollSystem.Entity.Models.Employee.Orgnisations", "orgnisations")
                        .WithMany("employees")
                        .HasForeignKey("OrgnisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("orgnisations");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.EmployeeSecurity", b =>
                {
                    b.HasOne("PayrollSystem.Entity.Models.Employee.Employee", "employee")
                        .WithMany("employeeSecurities")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.PaymentData", b =>
                {
                    b.HasOne("PayrollSystem.Entity.Models.Employee.Employee", "Employee")
                        .WithMany("paymentDatas")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.UserLeave", b =>
                {
                    b.HasOne("PayrollSystem.Entity.Models.Employee.Employee", "employees")
                        .WithMany("userLeaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employees");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Employee", b =>
                {
                    b.Navigation("dailyTimeSheets");

                    b.Navigation("employeeSecurities");

                    b.Navigation("paymentDatas");

                    b.Navigation("userLeaves");
                });

            modelBuilder.Entity("PayrollSystem.Entity.Models.Employee.Orgnisations", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
